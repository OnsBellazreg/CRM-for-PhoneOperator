package tn.esprit.CRM.gui;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.control.Button;

import java.io.IOException;
import java.net.URL;
import java.util.List;
import java.util.ResourceBundle;
import java.util.concurrent.atomic.AtomicInteger;

import javax.naming.InitialContext;
import javax.naming.NamingException;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.layout.VBox;
import tn.esprit.CRM.persistence.Conge;
import tn.esprit.CRM.persistence.Staff;
import tn.esprit.CRM.services.StaffServiceRemote;
import javafx.scene.layout.Pane;

public class testController implements Initializable{
	@FXML
	private Button btnOverview;
	@FXML
	private Button btnOrders;
	@FXML
	private Button btnCustomers;
	@FXML
	private Button btnMenus;
	@FXML
	private Button btnPackages;
	@FXML
	private Button btnSettings;
	@FXML
	private Button btnSignout;
	@FXML
	private Pane pnlCustomer;
	@FXML
	private Pane pnlOrders;
	@FXML
	private Pane pnlMenus;
	@FXML
	private Pane pnlOverview;
	@FXML
	private Label nbrestaff;
	@FXML
	private Label nbrdispo;
	@FXML
	private Label nbrnondispo;
	@FXML
	private Label nbrconge;
	@FXML
	private VBox pnItems;

	// Event Listener on Button[#btnOverview].onAction
	@FXML
	public void handleClicks1(ActionEvent event) throws IOException {
		FXMLLoader loaders= new FXMLLoader(getClass().getResource("./AfficherStaff.fxml"));
	       Parent root;
	  	 	root=loaders.load();
	  	 	btnOverview.getScene().setRoot(root);
	}
	// Event Listener on Button[#btnOrders].onAction
	@FXML
	public void handleClicks2(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnCustomers].onAction
	@FXML
	public void handleClicks3(ActionEvent event) throws IOException {
		FXMLLoader loaders= new FXMLLoader(getClass().getResource("./AddStaff.fxml"));
	       Parent root;
	  	 	root=loaders.load();
	  	 	btnCustomers.getScene().setRoot(root);
	}
	// Event Listener on Button[#btnMenus].onAction
	@FXML
	public void handleClicks4(ActionEvent event) throws IOException {
		FXMLLoader loaders= new FXMLLoader(getClass().getResource("./TraitementConge.fxml"));
	       Parent root;
	  	 	root=loaders.load();
	  	 	btnMenus.getScene().setRoot(root);
	}
	// Event Listener on Button[#btnPackages].onAction
	@FXML
	public void btnPackages(ActionEvent event) throws IOException {
		FXMLLoader loaders= new FXMLLoader(getClass().getResource("./Salaire.fxml"));
	       Parent root;
	  	 	root=loaders.load();
	  	 	btnPackages.getScene().setRoot(root);
	}
	// Event Listener on Button[#btnSettings].onAction
	@FXML
	public void bouton2(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#btnSignout].onAction
	@FXML
	public void bouton3(ActionEvent event) {
		// TODO Autogenerated
	}
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		 InitialContext ctx;
		 int x=0;
			int y=0;
			int z=0;
			int w=0;
			try {
				ctx = new InitialContext();
				StaffServiceRemote proxy;

				proxy = (StaffServiceRemote) ctx.lookup("CRM-ear/CRM-ejb/StaffService!tn.esprit.CRM.services.StaffServiceRemote");
				ObservableList<Staff> data = FXCollections.observableArrayList(proxy.FindAllStaff());
					List<Staff> li= proxy.FindAllStaff();
					ObservableList<Conge> data2 = FXCollections.observableArrayList(proxy.FindAllDemandeConge());
					List<Conge> li2= proxy.FindAllDemandeConge();
					
					
					for(Conge c1:li2){
					
						if(c1.getStatus_co().equals("not examined yet")){
							w=w+1;
						}
					}
				for(Staff c:li){
				x=x+1;
				if(c.getDisponibilite()==1){
					y=y+1;
				}
				if(c.getDisponibilite()==0){
					z=z+1;
				}
				}
				System.out.println(x);
				nbrestaff.setText(String.valueOf(x));
				nbrdispo.setText(String.valueOf(y));
				nbrnondispo.setText(String.valueOf(z));
				nbrconge.setText(String.valueOf(w));
				
				
			//Affichage
				List<Staff> users = proxy.FindAllStaff();
				Node[] nodes = new Node[users.size()];
				
				AtomicInteger i = new AtomicInteger(0);
				users.forEach(Staff -> {
					int j = i.getAndIncrement();
					Node node = nodes[j] = loadNewItemNode();

					displaUserDetails(node, Staff);
				//	System.out.println(Staff.getCIN());
				//	setupActions(node, Staff, j);
					
				//	setHoverStyleForNode(nodes, j);

					pnItems.getChildren().add(node);
				});

				if (nodes.length > 0) {
					pnItems.setStyle("-fx-background-color : #53639F");
					pnItems.toFront();
				}
				
			} catch (NamingException e1) {
				// TODO Auto-generated catch blocks
				//e1.printStackTrace();
			} 
		
		/*  Node[] nodes = new Node[x];
	        for (int i = 0; i < nodes.length; i++) {
	            try {

	                final int j = i;
	                nodes[i] = FXMLLoader.load(getClass().getResource("item.fxml"));
	                
	                //give the items some effect

	                nodes[i].setOnMouseEntered(event -> {
	                    nodes[j].setStyle("-fx-background-color : #0A0E3F");
	                    
	                });
	                
	                nodes[i].setOnMouseExited(event -> {
	                    nodes[j].setStyle("-fx-background-color : #02030A");
	                });
	                pnItems.getChildren().add(nodes[i]);

	            } catch (IOException e) {
	                e.printStackTrace();
	            }
	        } */
			
		
	}
	private Node loadNewItemNode() {
		try {
			return FXMLLoader.load(getClass().getResource("/tn/esprit/CRM/gui/Item1.fxml"));
		} catch (IOException e) {
			throw new RuntimeException();
		}
	}
	
	private void displaUserDetails(Node node, Staff staff) {
		Label firstName = (Label) node.lookup(".item_firstName");
		firstName.setText(staff.getFirst_Name());
		Label lastName = (Label) node.lookup(".item_lastName");
		lastName.setText(staff.getLast_Name());
		Label CIN = (Label) node.lookup(".item_CIN");
		CIN.setText(staff.getCIN().toString());
		Label salary = (Label) node.lookup(".item_Salary");
		salary.setText(String.valueOf(staff.getSalary_staff()));
		// other properties
		// ...
	}
}
